-- esp-modul.lua

-- Основные сервисы
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Camera = game:GetService("Workspace").CurrentCamera
local LocalPlayer = Players.LocalPlayer

-- Таблица для экспорта переменных и функций
local ESP = {}

-- Переменные для ESP (доступны для изменения из основного скрипта)
ESP.espEnabled = true -- Включить/выключить ESP
ESP.teamCheckEnabled = true -- Включить/выключить тим-чек
ESP.tracersEnabled = true -- Включить/выключить трассеры
ESP.tracerFromBottom = false -- Трассеры от низа экрана (true) или из центра (false)
ESP.espVisibleColor = Color3.fromRGB(0, 255, 0) -- Цвет для видимых игроков (зеленый)
ESP.espNotVisibleColor = Color3.fromRGB(255, 0, 0) -- Цвет для невидимых игроков (красный)
ESP.espMaxDistance = 1000 -- Максимальная дистанция рендера ESP (в studs)
ESP.boxTransparency = 0.5 -- Прозрачность боксов (0-1)
ESP.tracerThickness = 2 -- Толщина трассеров (1-5)
ESP.boxThickness = 0.1 -- Толщина бокса (0-0.5)
ESP.textSize = 10 -- Размер текста (8-20)
ESP.skeletonEnabled = false -- Настройка для Skeleton ESP
ESP.xrayEnabled = false -- Настройка для X-Ray
ESP.xrayColor = Color3.fromRGB(128, 0, 128) -- Фиолетовый цвет для X-Ray (RGB: 128, 0, 128)
ESP.espElements = {} -- Таблица для хранения элементов ESP

-- Функция для создания ESP для игрока
local function createESP(player)
    if player == LocalPlayer or not player.Character then return end

    local character = player.Character
    local rootPart = character:FindFirstChild("HumanoidRootPart")
    local humanoid = character:FindFirstChild("Humanoid")
    if not rootPart or not humanoid then return end

    -- Создаем BillboardGui для текста (сбоку от бокса)
    local billboard = Instance.new("BillboardGui")
    billboard.Name = "ESP_Billboard"
    billboard.Parent = rootPart
    billboard.Size = UDim2.new(0, 100, 0, 60) -- Размер для трех строк
    billboard.StudsOffset = Vector3.new(3, 0, 0) -- Смещаем вправо от бокса
    billboard.AlwaysOnTop = true

    local nameLabel = Instance.new("TextLabel")
    nameLabel.Parent = billboard
    nameLabel.Size = UDim2.new(1, 0, 0, 20)
    nameLabel.Position = UDim2.new(0, 0, 0, 0)
    nameLabel.BackgroundTransparency = 1
    nameLabel.Text = player.Name
    nameLabel.TextColor3 = Color3.new(1, 1, 1)
    nameLabel.TextSize = ESP.textSize
    nameLabel.Font = Enum.Font.GothamBold
    nameLabel.TextStrokeTransparency = 0.5

    local distanceLabel = Instance.new("TextLabel")
    distanceLabel.Parent = billboard
    distanceLabel.Size = UDim2.new(1, 0, 0, 20)
    distanceLabel.Position = UDim2.new(0, 0, 0, 20)
    distanceLabel.BackgroundTransparency = 1
    distanceLabel.Text = "0 studs"
    distanceLabel.TextColor3 = Color3.new(1, 1, 1)
    distanceLabel.TextSize = ESP.textSize
    distanceLabel.Font = Enum.Font.Gotham
    distanceLabel.TextStrokeTransparency = 0.5

    local healthLabel = Instance.new("TextLabel")
    healthLabel.Parent = billboard
    healthLabel.Size = UDim2.new(1, 0, 0, 20)
    healthLabel.Position = UDim2.new(0, 0, 0, 40)
    healthLabel.BackgroundTransparency = 1
    healthLabel.Text = "100%"
    healthLabel.TextColor3 = Color3.new(1, 1, 1)
    healthLabel.TextSize = ESP.textSize
    healthLabel.Font = Enum.Font.Gotham
    healthLabel.TextStrokeTransparency = 0.5

    -- Создаем Box ESP (коробку вокруг игрока)
    local box = Instance.new("BoxHandleAdornment")
    box.Name = "ESP_Box"
    box.Parent = rootPart
    box.Adornee = rootPart -- Привязываем к HumanoidRootPart
    box.Size = Vector3.new(4, 6, 4) -- Начальный размер, будет обновляться
    box.AlwaysOnTop = true
    box.ZIndex = 0
    box.Transparency = ESP.boxTransparency
    box.Color3 = ESP.espVisibleColor

    -- Создаем Drawing объект для трассера
    local tracer = Drawing.new("Line")
    tracer.Thickness = ESP.tracerThickness
    tracer.Transparency = 1

    -- Создаем Highlight для X-Ray
    local highlight = Instance.new("Highlight")
    highlight.Name = "ESP_Highlight"
    highlight.Parent = character
    highlight.Adornee = character
    highlight.FillColor = ESP.xrayColor
    highlight.OutlineColor = ESP.xrayColor
    highlight.FillTransparency = 0.5 -- Полупрозрачная заливка
    highlight.OutlineTransparency = 0 -- Непрозрачный контур
    highlight.Enabled = false -- По умолчанию выключен

    ESP.espElements[player] = {
        Billboard = billboard,
        NameLabel = nameLabel,
        DistanceLabel = distanceLabel,
        HealthLabel = healthLabel,
        Box = box,
        Tracer = tracer,
        Highlight = highlight, -- Для X-Ray
        Visible = false,
        Skeleton = {} -- Таблица для линий скелета
    }
end

-- Функция для удаления ESP для игрока
local function removeESP(player)
    if ESP.espElements[player] then
        ESP.espElements[player].Billboard:Destroy()
        ESP.espElements[player].Box:Destroy()
        ESP.espElements[player].Tracer:Remove()
        ESP.espElements[player].Highlight:Destroy()
        for _, skeletonLine in pairs(ESP.espElements[player].Skeleton) do
            skeletonLine:Remove()
        end
        ESP.espElements[player] = nil
    end
end

-- Функция для проверки видимости игрока
local function isPlayerVisible(targetCharacter)
    local localRoot = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    if not localRoot or not targetCharacter then return false end

    local targetRoot = targetCharacter:FindFirstChild("HumanoidRootPart")
    local targetHead = targetCharacter:FindFirstChild("Head")
    if not targetRoot or not targetHead then return false end

    local raycastParams = RaycastParams.new()
    raycastParams.FilterDescendantsInstances = {LocalPlayer.Character}
    raycastParams.FilterType = Enum.RaycastFilterType.Blacklist

    -- Проверяем видимость через два луча: к голове и к торсу
    local raycastResult1 = workspace:Raycast(
        Camera.CFrame.Position,
        (targetHead.Position - Camera.CFrame.Position),
        raycastParams
    )
    local raycastResult2 = workspace:Raycast(
        Camera.CFrame.Position,
        (targetRoot.Position - Camera.CFrame.Position),
        raycastParams
    )

    local visibleHead = not raycastResult1 or raycastResult1.Instance:IsDescendantOf(targetCharacter)
    local visibleTorso = not raycastResult2 or raycastResult2.Instance:IsDescendantOf(targetCharacter)

    return visibleHead or visibleTorso
end

-- Функция для проверки команды
local function isSameTeam(player)
    if not LocalPlayer.Team or not player.Team then return false end
    return LocalPlayer.Team == player.Team
end

-- Функция для обновления ESP
local function updateESP()
    if not ESP.espEnabled then
        for _, elements in pairs(ESP.espElements) do
            elements.Billboard.Enabled = false
            elements.Box.Visible = false
            elements.Tracer.Visible = false
            elements.Highlight.Enabled = false
            for _, skeletonLine in pairs(elements.Skeleton) do
                skeletonLine.Visible = false
            end
        end
        return
    end

    -- Получаем центр экрана или низ экрана для трассеров
    local screenCenter = ESP.tracerFromBottom and Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y) or Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)

    -- Проверяем всех игроков и добавляем ESP для новых
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and not ESP.espElements[player] and player.Character then
            local localRoot = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
            local targetRoot = player.Character:FindFirstChild("HumanoidRootPart")
            if localRoot and targetRoot then
                local distance = (localRoot.Position - targetRoot.Position).Magnitude
                if distance <= ESP.espMaxDistance then
                    createESP(player)
                end
            end
        end
    end

    for player, elements in pairs(ESP.espElements) do
        if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") or not player.Character:FindFirstChild("Humanoid") then
            removeESP(player)
            continue
        end

        local character = player.Character
        local rootPart = character:FindFirstChild("HumanoidRootPart")
        local humanoid = character:FindFirstChild("Humanoid")
        local localRoot = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")

        if not localRoot then
            elements.Billboard.Enabled = false
            elements.Box.Visible = false
            elements.Tracer.Visible = false
            elements.Highlight.Enabled = false
            for _, skeletonLine in pairs(elements.Skeleton) do
                skeletonLine.Visible = false
            end
            continue
        end

        -- Проверяем дистанцию
        local distance = (localRoot.Position - rootPart.Position).Magnitude
        if distance > ESP.espMaxDistance then
            elements.Billboard.Enabled = false
            elements.Box.Visible = false
            elements.Tracer.Visible = false
            elements.Highlight.Enabled = false
            for _, skeletonLine in pairs(elements.Skeleton) do
                skeletonLine.Visible = false
            end
            continue
        end

        -- Проверяем, жив ли игрок
        if humanoid.Health <= 0 then
            elements.Billboard.Enabled = false
            elements.Box.Visible = false
            elements.Tracer.Visible = false
            elements.Highlight.Enabled = false
            for _, skeletonLine in pairs(elements.Skeleton) do
                skeletonLine.Visible = false
            end
            continue
        end

        -- Проверяем команду (если тим-чек включен, тиммейты не отображаются)
        if ESP.teamCheckEnabled and isSameTeam(player) then
            elements.Billboard.Enabled = false
            elements.Box.Visible = false
            elements.Tracer.Visible = false
            elements.Highlight.Enabled = false
            for _, skeletonLine in pairs(elements.Skeleton) do
                skeletonLine.Visible = false
            end
            continue
        end

        -- Проверяем видимость
        local isVisible = isPlayerVisible(character)
        elements.Visible = isVisible

        -- Определяем цвет
        local color = isVisible and ESP.espVisibleColor or ESP.espNotVisibleColor

        -- Обновляем элементы ESP
        elements.Billboard.Enabled = true
        elements.NameLabel.Text = player.Name
        elements.NameLabel.TextColor3 = color
        elements.NameLabel.TextSize = ESP.textSize
        elements.DistanceLabel.Text = math.floor(distance) .. " studs"
        elements.DistanceLabel.TextColor3 = color
        elements.DistanceLabel.TextSize = ESP.textSize
        elements.HealthLabel.Text = math.floor((humanoid.Health / humanoid.MaxHealth) * 100) .. "%"
        elements.HealthLabel.TextColor3 = color
        elements.HealthLabel.TextSize = ESP.textSize

        -- Обновляем бокс с помощью GetBoundingBox
        local modelCFrame, modelSize = character:GetBoundingBox()
        elements.Box.Size = modelSize + Vector3.new(ESP.boxThickness, ESP.boxThickness, ESP.boxThickness) -- Устанавливаем размер бокса
        elements.Box.Adornee = rootPart -- Убедимся, что Adornee установлен
        elements.Box.Color3 = color
        elements.Box.Transparency = ESP.boxTransparency
        elements.Box.Visible = true

        -- Обновляем трассер
        if ESP.tracersEnabled then
            local feetPos = rootPart.Position - Vector3.new(0, 3, 0)
            local screenPos, onScreen = Camera:WorldToScreenPoint(feetPos)
            if onScreen then
                elements.Tracer.From = screenCenter
                elements.Tracer.To = Vector2.new(screenPos.X, screenPos.Y)
                elements.Tracer.Color = color
                elements.Tracer.Thickness = ESP.tracerThickness
                elements.Tracer.Visible = true
            else
                elements.Tracer.Visible = false
            end
        else
            elements.Tracer.Visible = false
        end

        -- Обновляем X-Ray (подсветка игрока)
        if ESP.xrayEnabled then
            elements.Highlight.FillColor = ESP.xrayColor
            elements.Highlight.OutlineColor = ESP.xrayColor
            elements.Highlight.Enabled = true
        else
            elements.Highlight.Enabled = false
        end

        -- Skeleton ESP
        if ESP.skeletonEnabled then
            -- Определяем ключевые части тела
            local parts = {
                Head = character:FindFirstChild("Head"),
                UpperTorso = character:FindFirstChild("UpperTorso"),
                LowerTorso = character:FindFirstChild("LowerTorso"),
                LeftUpperArm = character:FindFirstChild("LeftUpperArm"),
                RightUpperArm = character:FindFirstChild("RightUpperArm"),
                LeftLowerArm = character:FindFirstChild("LeftLowerArm"),
                RightLowerArm = character:FindFirstChild("RightLowerArm"),
                LeftUpperLeg = character:FindFirstChild("LeftUpperLeg"),
                RightUpperLeg = character:FindFirstChild("RightUpperLeg"),
                LeftLowerLeg = character:FindFirstChild("LeftLowerLeg"),
                RightLowerLeg = character:FindFirstChild("RightLowerLeg")
            }

            -- Определяем связи между частями тела
            local connections = {
                {from = "Head", to = "UpperTorso"},
                {from = "UpperTorso", to = "LowerTorso"},
                {from = "UpperTorso", to = "LeftUpperArm"},
                {from = "UpperTorso", to = "RightUpperArm"},
                {from = "LeftUpperArm", to = "LeftLowerArm"},
                {from = "RightUpperArm", to = "RightLowerArm"},
                {from = "LowerTorso", to = "LeftUpperLeg"},
                {from = "LowerTorso", to = "RightUpperLeg"},
                {from = "LeftUpperLeg", to = "LeftLowerLeg"},
                {from = "RightUpperLeg", to = "RightLowerLeg"}
            }

            -- Рисуем линии скелета
            for i, connection in ipairs(connections) do
                local fromPart = parts[connection.from]
                local toPart = parts[connection.to]
                if fromPart and toPart then
                    local fromPos, fromOnScreen = Camera:WorldToViewportPoint(fromPart.Position)
                    local toPos, toOnScreen = Camera:WorldToViewportPoint(toPart.Position)
                    if fromOnScreen and toOnScreen then
                        if not elements.Skeleton[i] then
                            local line = Drawing.new("Line")
                            line.Thickness = 1
                            line.Transparency = 1
                            elements.Skeleton[i] = line
                        end
                        local line = elements.Skeleton[i]
                        line.From = Vector2.new(fromPos.X, fromPos.Y)
                        line.To = Vector2.new(toPos.X, toPos.Y)
                        line.Color = color
                        line.Visible = true
                    else
                        if elements.Skeleton[i] then
                            elements.Skeleton[i].Visible = false
                        end
                    end
                else
                    if elements.Skeleton[i] then
                        elements.Skeleton[i].Visible = false
                    end
                end
            end
        else
            for _, skeletonLine in pairs(elements.Skeleton) do
                skeletonLine.Visible = false
            end
        end
    end
end

-- Инициализация ESP для всех игроков
local function initializeESP()
    for _, player in pairs(Players:GetPlayers()) do
        if not ESP.espElements[player] then
            createESP(player)
        end
    end
end

-- Обновление ESP при добавлении нового игрока
Players.PlayerAdded:Connect(function(player)
    if ESP.espEnabled then
        createESP(player)
    end
end)

-- Удаление ESP при выходе игрока
Players.PlayerRemoving:Connect(function(player)
    removeESP(player)
end)

-- Обработка респавна персонажа
local function onCharacterAdded(player, character)
    if ESP.espEnabled and ESP.espElements[player] then
        removeESP(player)
        createESP(player)
    end
end

for _, player in pairs(Players:GetPlayers()) do
    player.CharacterAdded:Connect(function(character)
        onCharacterAdded(player, character)
    end)
end

Players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function(character)
        onCharacterAdded(player, character)
    end)
end)

-- Обновление ESP каждый кадр
RunService.RenderStepped:Connect(updateESP)

-- Инициализация ESP при загрузке
if ESP.espEnabled then
    initializeESP()
end

-- Экспортируем таблицу ESP
return ESP
