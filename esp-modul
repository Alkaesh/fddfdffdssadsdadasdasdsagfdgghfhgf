-- esp-modul

local ESP = {}
ESP.espEnabled = true
ESP.teamCheckEnabled = true
ESP.tracersEnabled = true
ESP.tracerFromBottom = false
ESP.espMaxDistance = 3000
ESP.tracerThickness = 2
ESP.boxTransparency = 0.5 -- Прозрачность бокса (оставляем, хотя не используется в интерфейсе)
ESP.boxThickness = 0.1 -- Толщина бокса (оставляем, хотя не используется в интерфейсе)
ESP.textSize = 10
ESP.espVisibleColor = Color3.fromRGB(0, 255, 0) -- Цвет для видимых игроков
ESP.espNotVisibleColor = Color3.fromRGB(255, 0, 0) -- Цвет для невидимых игроков
ESP.skeletonEnabled = false -- Настройка для Skeleton ESP
ESP.xrayEnabled = false -- Настройка для X-Ray
ESP.xrayColor = Color3.fromRGB(128, 0, 128) -- Фиолетовый цвет для X-Ray (RGB: 128, 0, 128)

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera
local ReplicatedStorage = game:GetService("ReplicatedStorage")

-- Таблица для хранения объектов ESP
local espObjects = {}

-- Функция для создания BillboardGui для текста
local function createBillboardGui(parent)
    local billboard = Instance.new("BillboardGui")
    billboard.Adornee = parent
    billboard.Size = UDim2.new(0, 100, 0, 50)
    billboard.StudsOffset = Vector3.new(0, 3, 0) -- Над головой
    billboard.AlwaysOnTop = true
    billboard.MaxDistance = ESP.espMaxDistance

    local textLabel = Instance.new("TextLabel")
    textLabel.Size = UDim2.new(1, 0, 1, 0)
    textLabel.BackgroundTransparency = 1
    textLabel.TextSize = ESP.textSize
    textLabel.Font = Enum.Font.SourceSans
    textLabel.TextColor3 = ESP.espVisibleColor
    textLabel.TextStrokeTransparency = 0
    textLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    textLabel.Parent = billboard

    return billboard
end

-- Функция для создания BoxHandleAdornment для бокса
local function createBoxAdornment(parent)
    local box = Instance.new("BoxHandleAdornment")
    box.Adornee = parent
    box.Size = Vector3.new(4, 6, 2) -- Размер бокса (будет обновляться через GetBoundingBox)
    box.Transparency = 0.5
    box.Color3 = ESP.espVisibleColor
    box.AlwaysOnTop = true
    return box
end

-- Функция для создания Beam для трассеров и линий скелета
local function createBeam()
    local beam = Instance.new("Beam")
    beam.Width0 = 0.1
    beam.Width1 = 0.1
    beam.Color = ColorSequence.new(ESP.espVisibleColor)
    beam.Enabled = false
    return beam
end

-- Функция для проверки, является ли игрок видимым
local function isPlayerVisible(player)
    local character = player.Character
    if not character then return false end

    local rootPart = character:FindFirstChild("HumanoidRootPart")
    if not rootPart then return false end

    local distance = (rootPart.Position - Camera.CFrame.Position).Magnitude
    local ray = Ray.new(Camera.CFrame.Position, (rootPart.Position - Camera.CFrame.Position).Unit * distance)
    local hit = workspace:FindPartOnRayWithIgnoreList(ray, {LocalPlayer.Character or {}})
    return hit == nil or hit:IsDescendantOf(character)
end

-- Основная функция обновления ESP
local function updateESP()
    for _, player in pairs(Players:GetPlayers()) do
        if player == LocalPlayer then continue end
        if ESP.teamCheckEnabled and player.Team == LocalPlayer.Team then continue end

        local character = player.Character
        if not character then
            if espObjects[player] then
                for _, obj in pairs(espObjects[player]) do
                    obj:Destroy()
                end
                espObjects[player] = nil
            end
            continue
        end

        local rootPart = character:FindFirstChild("HumanoidRootPart")
        if not rootPart then continue end

        local distance = (rootPart.Position - Camera.CFrame.Position).Magnitude
        if distance > ESP.espMaxDistance then
            if espObjects[player] then
                for _, obj in pairs(espObjects[player]) do
                    obj:Destroy()
                end
                espObjects[player] = nil
            end
            continue
        end

        -- Создаём объекты ESP, если их ещё нет
        if not espObjects[player] then
            local box = createBoxAdornment(rootPart)
            local name = createBillboardGui(rootPart)
            local tracer = createBeam()
            local tracerAttachment0 = Instance.new("Attachment")
            local tracerAttachment1 = Instance.new("Attachment")
            tracerAttachment0.Parent = rootPart
            tracerAttachment1.Parent = Camera
            tracer.Attachment0 = tracerAttachment0
            tracer.Attachment1 = tracerAttachment1
            tracer.Parent = rootPart

            espObjects[player] = {
                box = box,
                tracer = tracer,
                tracerAttachment0 = tracerAttachment0,
                tracerAttachment1 = tracerAttachment1,
                name = name,
                skeleton = {} -- Таблица для линий скелета
            }
        end

        local esp = espObjects[player]
        local box = esp.box
        local tracer = esp.tracer
        local tracerAttachment0 = esp.tracerAttachment0
        local tracerAttachment1 = esp.tracerAttachment1
        local name = esp.name
        local skeleton = esp.skeleton

        -- Проверка видимости (если X-Ray выключен)
        local isVisible = true
        if not ESP.xrayEnabled then
            isVisible = isPlayerVisible(player)
        end

        -- Определяем цвет в зависимости от X-Ray
        local espColor
        if ESP.xrayEnabled then
            espColor = ESP.xrayColor -- Фиолетовый цвет для X-Ray
        else
            espColor = isVisible and ESP.espVisibleColor or ESP.espNotVisibleColor
        end

        -- Обновляем размер бокса с помощью GetBoundingBox
        local modelCFrame, modelSize = character:GetBoundingBox()
        box.Size = modelSize
        box.CFrame = modelCFrame
        box.Color3 = espColor
        box.Visible = ESP.espEnabled

        -- Трейсер
        if ESP.tracersEnabled then
            tracerAttachment1.Position = ESP.tracerFromBottom and Vector3.new(0, -Camera.ViewportSize.Y / 100, 0) or Vector3.new(0, Camera.ViewportSize.Y / 100, 0)
            tracer.Color = ColorSequence.new(espColor)
            tracer.Enabled = ESP.espEnabled
        else
            tracer.Enabled = false
        end

        -- Имя
        name.TextLabel.Text = player.Name .. " [" .. math.floor(distance) .. "]"
        name.TextLabel.TextSize = ESP.textSize
        name.TextLabel.TextColor3 = espColor
        name.Enabled = ESP.espEnabled

        -- Skeleton ESP
        if ESP.skeletonEnabled then
            -- Определяем ключевые части тела
            local parts = {
                Head = character:FindFirstChild("Head"),
                UpperTorso = character:FindFirstChild("UpperTorso"),
                LowerTorso = character:FindFirstChild("LowerTorso"),
                LeftUpperArm = character:FindFirstChild("LeftUpperArm"),
                RightUpperArm = character:FindFirstChild("RightUpperArm"),
                LeftLowerArm = character:FindFirstChild("LeftLowerArm"),
                RightLowerArm = character:FindFirstChild("RightLowerArm"),
                LeftUpperLeg = character:FindFirstChild("LeftUpperLeg"),
                RightUpperLeg = character:FindFirstChild("RightUpperLeg"),
                LeftLowerLeg = character:FindFirstChild("LeftLowerLeg"),
                RightLowerLeg = character:FindFirstChild("RightLowerLeg")
            }

            -- Определяем связи между частями тела
            local connections = {
                {from = "Head", to = "UpperTorso"},
                {from = "UpperTorso", to = "LowerTorso"},
                {from = "UpperTorso", to = "LeftUpperArm"},
                {from = "UpperTorso", to = "RightUpperArm"},
                {from = "LeftUpperArm", to = "LeftLowerArm"},
                {from = "RightUpperArm", to = "RightLowerArm"},
                {from = "LowerTorso", to = "LeftUpperLeg"},
                {from = "LowerTorso", to = "RightUpperLeg"},
                {from = "LeftUpperLeg", to = "LeftLowerLeg"},
                {from = "RightUpperLeg", to = "RightLowerLeg"}
            }

            -- Рисуем линии скелета
            for i, connection in ipairs(connections) do
                local fromPart = parts[connection.from]
                local toPart = parts[connection.to]
                if fromPart and toPart then
                    if not skeleton[i] then
                        local beam = createBeam()
                        local attachment0 = Instance.new("Attachment")
                        local attachment1 = Instance.new("Attachment")
                        attachment0.Parent = fromPart
                        attachment1.Parent = toPart
                        beam.Attachment0 = attachment0
                        beam.Attachment1 = attachment1
                        beam.Parent = fromPart
                        skeleton[i] = {beam = beam, attachment0 = attachment0, attachment1 = attachment1}
                    end
                    local line = skeleton[i].beam
                    line.Color = ColorSequence.new(espColor)
                    line.Enabled = ESP.espEnabled
                else
                    if skeleton[i] then
                        skeleton[i].beam.Enabled = false
                    end
                end
            end
        else
            for _, line in pairs(skeleton) do
                line.beam.Enabled = false
            end
        end
    end
end

-- Запускаем обновление ESP
RunService.RenderStepped:Connect(updateESP)

-- Очистка при выходе игрока
Players.PlayerRemoving:Connect(function(player)
    if espObjects[player] then
        for _, obj in pairs(espObjects[player]) do
            obj:Destroy()
        end
        espObjects[player] = nil
    end
end)

-- Очистка при респавне локального игрока
LocalPlayer.CharacterAdded:Connect(function()
    for player, objects in pairs(espObjects) do
        for _, obj in pairs(objects) do
            obj:Destroy()
        end
        espObjects[player] = nil
    end
end)

return ESP
