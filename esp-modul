-- esp-modul.lua

-- Основные сервисы
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Camera = game:GetService("Workspace").CurrentCamera
local LocalPlayer = Players.LocalPlayer

-- Таблица для экспорта переменных и функций
local ESP = {
    espEnabled = true,
    teamCheckEnabled = true,
    tracersEnabled = true,
    boxesEnabled = true,
    tracerFromBottom = false,
    espVisibleColor = Color3.fromRGB(0, 255, 0),
    espNotVisibleColor = Color3.fromRGB(255, 0, 0),
    espMaxDistance = 1000,
    boxTransparency = 0.5,
    tracerThickness = 2,
    boxThickness = 0.1,
    textSize = 10,
    skeletonEnabled = false,
    xrayEnabled = false,
    xrayColor = Color3.fromRGB(128, 0, 128),
    espElements = {},
    updateFrequency = 2 -- Частота обновления (каждые 2 кадра)
}

-- Кэшируем часто используемые значения
local screenCenterCache = Vector2.new()

-- Функция для создания ESP для игрока
local function createESP(player)
    if player == LocalPlayer or not player.Character then return end

    local character = player.Character
    local rootPart = character:FindFirstChild("HumanoidRootPart")
    local humanoid = character:FindFirstChild("Humanoid")
    if not rootPart or not humanoid then return end

    local billboard = Instance.new("BillboardGui")
    billboard.Name = "ESP_Billboard"
    billboard.Parent = rootPart
    billboard.Size = UDim2.new(0, 100, 0, 60)
    billboard.StudsOffset = Vector3.new(3, 0, 0)
    billboard.AlwaysOnTop = true

    local nameLabel = Instance.new("TextLabel")
    nameLabel.Parent = billboard
    nameLabel.Size = UDim2.new(1, 0, 0, 20)
    nameLabel.BackgroundTransparency = 1
    nameLabel.Text = player.Name
    nameLabel.TextColor3 = Color3.new(1, 1, 1)
    nameLabel.TextSize = ESP.textSize
    nameLabel.Font = Enum.Font.GothamBold
    nameLabel.TextStrokeTransparency = 0.5

    local distanceLabel = Instance.new("TextLabel")
    distanceLabel.Parent = billboard
    distanceLabel.Size = UDim2.new(1, 0, 0, 20)
    distanceLabel.Position = UDim2.new(0, 0, 0, 20)
    distanceLabel.BackgroundTransparency = 1
    distanceLabel.Text = "0 studs"
    distanceLabel.TextColor3 = Color3.new(1, 1, 1)
    distanceLabel.TextSize = ESP.textSize
    distanceLabel.Font = Enum.Font.Gotham
    distanceLabel.TextStrokeTransparency = 0.5

    local healthLabel = Instance.new("TextLabel")
    healthLabel.Parent = billboard
    healthLabel.Size = UDim2.new(1, 0, 0, 20)
    healthLabel.Position = UDim2.new(0, 0, 0, 40)
    healthLabel.BackgroundTransparency = 1
    healthLabel.Text = "100%"
    healthLabel.TextColor3 = Color3.new(1, 1, 1)
    healthLabel.TextSize = ESP.textSize
    healthLabel.Font = Enum.Font.Gotham
    healthLabel.TextStrokeTransparency = 0.5

    local box = Instance.new("BoxHandleAdornment")
    box.Name = "ESP_Box"
    box.Parent = rootPart
    box.Adornee = rootPart
    box.Size = Vector3.new(4, 6, 4)
    box.AlwaysOnTop = true
    box.ZIndex = 0
    box.Transparency = ESP.boxTransparency
    box.Color3 = ESP.espVisibleColor

    local tracer = Drawing.new("Line")
    tracer.Thickness = ESP.tracerThickness
    tracer.Transparency = 1

    local highlight = Instance.new("Highlight")
    highlight.Name = "ESP_Highlight"
    highlight.Parent = character
    highlight.Adornee = character
    highlight.FillColor = ESP.xrayColor
    highlight.OutlineColor = ESP.xrayColor
    highlight.FillTransparency = 0.5
    highlight.OutlineTransparency = 0
    highlight.Enabled = false

    ESP.espElements[player] = {
        Billboard = billboard,
        NameLabel = nameLabel,
        DistanceLabel = distanceLabel,
        HealthLabel = healthLabel,
        Box = box,
        Tracer = tracer,
        Highlight = highlight,
        Visible = false,
        Skeleton = {},
        LastUpdateFrame = 0 -- Для контроля частоты обновления
    }
end

-- Функция для удаления ESP для игрока
local function removeESP(player)
    local elements = ESP.espElements[player]
    if elements then
        elements.Billboard:Destroy()
        elements.Box:Destroy()
        elements.Tracer:Remove()
        elements.Highlight:Destroy()
        for _, skeletonLine in pairs(elements.Skeleton) do
            skeletonLine:Remove()
        end
        ESP.espElements[player] = nil
    end
end

-- Оптимизированная проверка видимости
local function isPlayerVisible(targetRoot)
    local localRoot = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    if not localRoot or not targetRoot then return false end

    local raycastParams = RaycastParams.new()
    raycastParams.FilterDescendantsInstances = {LocalPlayer.Character}
    raycastParams.FilterType = Enum.RaycastFilterType.Blacklist

    local raycastResult = workspace:Raycast(
        Camera.CFrame.Position,
        (targetRoot.Position - Camera.CFrame.Position),
        raycastParams
    )

    return not raycastResult or raycastResult.Instance:IsDescendantOf(targetRoot.Parent)
end

-- Проверка команды
local function isSameTeam(player)
    return LocalPlayer.Team and player.Team and LocalPlayer.Team == player.Team
end

-- Основная функция обновления ESP
local frameCount = 0
local function updateESP()
    frameCount = frameCount + 1
    if not ESP.espEnabled then
        for _, elements in pairs(ESP.espElements) do
            elements.Billboard.Enabled = false
            elements.Box.Visible = false
            elements.Tracer.Visible = false
            elements.Highlight.Enabled = false
            for _, skeletonLine in pairs(elements.Skeleton) do
                skeletonLine.Visible = false
            end
        end
        return
    end

    -- Кэшируем центр экрана
    screenCenterCache = ESP.tracerFromBottom and Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y) or Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)

    local localRoot = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    if not localRoot then return end

    for player, elements in pairs(ESP.espElements) do
        local character = player.Character
        local rootPart = character and character:FindFirstChild("HumanoidRootPart")
        local humanoid = character and character:FindFirstChild("Humanoid")

        if not rootPart or not humanoid or humanoid.Health <= 0 then
            removeESP(player)
            continue
        end

        -- Проверяем дистанцию и команду только раз
        local distance = (localRoot.Position - rootPart.Position).Magnitude
        if distance > ESP.espMaxDistance or (ESP.teamCheckEnabled and isSameTeam(player)) then
            elements.Billboard.Enabled = false
            elements.Box.Visible = false
            elements.Tracer.Visible = false
            elements.Highlight.Enabled = false
            for _, skeletonLine in pairs(elements.Skeleton) do
                skeletonLine.Visible = false
            end
            continue
        end

        -- Обновляем только каждые ESP.updateFrequency кадра
        if frameCount % ESP.updateFrequency ~= elements.LastUpdateFrame % ESP.updateFrequency then
            continue
        end
        elements.LastUpdateFrame = frameCount

        -- Проверка видимости
        local isVisible = isPlayerVisible(rootPart)
        elements.Visible = isVisible
        local color = isVisible and ESP.espVisibleColor or ESP.espNotVisibleColor

        -- Обновляем текст
        elements.Billboard.Enabled = true
        elements.NameLabel.TextColor3 = color
        elements.NameLabel.TextSize = ESP.textSize
        elements.DistanceLabel.Text = math.floor(distance) .. " studs"
        elements.DistanceLabel.TextColor3 = color
        elements.DistanceLabel.TextSize = ESP.textSize
        elements.HealthLabel.Text = math.floor((humanoid.Health / humanoid.MaxHealth) * 100) .. "%"
        elements.HealthLabel.TextColor3 = color
        elements.HealthLabel.TextSize = ESP.textSize

        -- Обновляем бокс
        if ESP.boxesEnabled then
            local modelCFrame, modelSize = character:GetBoundingBox()
            elements.Box.Size = modelSize + Vector3.new(ESP.boxThickness, ESP.boxThickness, ESP.boxThickness)
            elements.Box.Color3 = color
            elements.Box.Transparency = ESP.boxTransparency
            elements.Box.Visible = true
        else
            elements.Box.Visible = false
        end

        -- Обновляем трассер
        if ESP.tracersEnabled then
            local feetPos = rootPart.Position - Vector3.new(0, 3, 0)
            local screenPos, onScreen = Camera:WorldToViewportPoint(feetPos)
            if onScreen then
                elements.Tracer.From = screenCenterCache
                elements.Tracer.To = Vector2.new(screenPos.X, screenPos.Y)
                elements.Tracer.Color = color
                elements.Tracer.Thickness = ESP.tracerThickness
                elements.Tracer.Visible = true
            else
                elements.Tracer.Visible = false
            end
        else
            elements.Tracer.Visible = false
        end

        -- Обновляем X-Ray
        if ESP.xrayEnabled then
            elements.Highlight.FillColor = ESP.xrayColor
            elements.Highlight.OutlineColor = ESP.xrayColor
            elements.Highlight.Enabled = true
        else
            elements.Highlight.Enabled = false
        end

        -- Обновляем Skeleton ESP
        if ESP.skeletonEnabled then
            local parts = {
                Head = character:FindFirstChild("Head"),
                UpperTorso = character:FindFirstChild("UpperTorso") or character:FindFirstChild("Torso") or character:FindFirstChild("Body") or character:FindFirstChild("Chest"),
                LowerTorso = character:FindFirstChild("LowerTorso") or character:FindFirstChild("Torso") or character:FindFirstChild("Body") or character:FindFirstChild("Chest"),
                LeftUpperArm = character:FindFirstChild("LeftUpperArm") or character:FindFirstChild("Left Arm") or character:FindFirstChild("LeftArm"),
                RightUpperArm = character:FindFirstChild("RightUpperArm") or character:FindFirstChild("Right Arm") or character:FindFirstChild("RightArm"),
                LeftLowerArm = character:FindFirstChild("LeftLowerArm") or character:FindFirstChild("Left Arm") or character:FindFirstChild("LeftArm"),
                RightLowerArm = character:FindFirstChild("RightLowerArm") or character:FindFirstChild("Right Arm") or character:FindFirstChild("RightArm"),
                LeftUpperLeg = character:FindFirstChild("LeftUpperLeg") or character:FindFirstChild("Left Leg") or character:FindFirstChild("LeftLeg"),
                RightUpperLeg = character:FindFirstChild("RightUpperLeg") or character:FindFirstChild("Right Leg") or character:FindFirstChild("RightLeg"),
                LeftLowerLeg = character:FindFirstChild("LeftLowerLeg") or character:FindFirstChild("Left Leg") or character:FindFirstChild("LeftLeg"),
                RightLowerLeg = character:FindFirstChild("RightLowerLeg") or character:FindFirstChild("Right Leg") or character:FindFirstChild("RightLeg")
            }

            local connections = {
                {from = "Head", to = "UpperTorso"},
                {from = "UpperTorso", to = "LowerTorso"},
                {from = "UpperTorso", to = "LeftUpperArm"},
                {from = "UpperTorso", to = "RightUpperArm"},
                {from = "LeftUpperArm", to = "LeftLowerArm"},
                {from = "RightUpperArm", to = "RightLowerArm"},
                {from = "LowerTorso", to = "LeftUpperLeg"},
                {from = "LowerTorso", to = "RightUpperLeg"},
                {from = "LeftUpperLeg", to = "LeftLowerLeg"},
                {from = "RightUpperLeg", to = "RightLowerLeg"}
            }

            for i, connection in ipairs(connections) do
                local fromPart = parts[connection.from]
                local toPart = parts[connection.to]
                if fromPart and toPart then
                    local fromPos, fromOnScreen = Camera:WorldToViewportPoint(fromPart.Position)
                    local toPos, toOnScreen = Camera:WorldToViewportPoint(toPart.Position)
                    if fromOnScreen and toOnScreen then
                        if not elements.Skeleton[i] then
                            local line = Drawing.new("Line")
                            line.Thickness = 1
                            line.Transparency = 1
                            elements.Skeleton[i] = line
                        end
                        local line = elements.Skeleton[i]
                        line.From = Vector2.new(fromPos.X, fromPos.Y)
                        line.To = Vector2.new(toPos.X, toPos.Y)
                        line.Color = color
                        line.Visible = true
                    elseif elements.Skeleton[i] then
                        elements.Skeleton[i].Visible = false
                    end
                elseif elements.Skeleton[i] then
                    elements.Skeleton[i].Visible = false
                end
            end
        else
            for _, skeletonLine in pairs(elements.Skeleton) do
                skeletonLine.Visible = false
            end
        end
    end
end

-- Инициализация ESP для всех игроков
local function initializeESP()
    for _, player in pairs(Players:GetPlayers()) do
        if not ESP.espElements[player] then
            createESP(player)
        end
    end
end

-- Подключение событий
Players.PlayerAdded:Connect(function(player)
    if ESP.espEnabled then
        createESP(player)
    end
end)

Players.PlayerRemoving:Connect(removeESP)

local function onCharacterAdded(player, character)
    if ESP.espEnabled and ESP.espElements[player] then
        removeESP(player)
        createESP(player)
    end
end

for _, player in pairs(Players:GetPlayers()) do
    player.CharacterAdded:Connect(function(character)
        onCharacterAdded(player, character)
    end)
end

Players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function(character)
        onCharacterAdded(player, character)
    end)
end)

RunService.RenderStepped:Connect(updateESP)

if ESP.espEnabled then
    initializeESP()
end

return ESP
